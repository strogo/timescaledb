\ir include/insert_single.sql
\ir create_single_db.sql
SET client_min_messages = WARNING;
DROP DATABASE IF EXISTS single;
SET client_min_messages = NOTICE;
CREATE DATABASE single;
\c single
CREATE EXTENSION IF NOT EXISTS timescaledb;
\c single
CREATE TABLE PUBLIC."one_Partition" (
  "timeCustom" BIGINT NOT NULL,
  device_id TEXT NOT NULL,
  series_0 DOUBLE PRECISION NULL,
  series_1 DOUBLE PRECISION NULL,
  series_2 DOUBLE PRECISION NULL,
  series_bool BOOLEAN NULL
);
CREATE INDEX ON PUBLIC."one_Partition" (device_id, "timeCustom" DESC NULLS LAST) WHERE device_id IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_0) WHERE series_0 IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_1)  WHERE series_1 IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_2) WHERE series_2 IS NOT NULL;
CREATE INDEX ON PUBLIC."one_Partition" ("timeCustom" DESC NULLS LAST, series_bool) WHERE series_bool IS NOT NULL;
SELECT * FROM create_hypertable('"public"."one_Partition"', 'timeCustom', associated_schema_name=>'one_Partition' );
 create_hypertable 
-------------------
 
(1 row)

--output command tags
\set QUIET off
BEGIN;
BEGIN
\COPY "one_Partition" FROM 'data/ds1_dev1_1.tsv' NULL AS '';
COPY 7
COMMIT;
COMMIT
INSERT INTO "one_Partition"("timeCustom", device_id, series_0, series_1) VALUES
(1257987600000000000, 'dev1', 1.5, 1),
(1257987600000000000, 'dev1', 1.5, 2),
(1257894000000000000, 'dev2', 1.5, 1),
(1257894002000000000, 'dev1', 2.5, 3);
INSERT 0 4
INSERT INTO "one_Partition"("timeCustom", device_id, series_0, series_1) VALUES
(1257894000000000000, 'dev2', 1.5, 2);
INSERT 0 1
\set QUIET on
DO $$
BEGIN
    CREATE ROLE alt_usr LOGIN;
EXCEPTION
    WHEN duplicate_object THEN
        --mute error
END$$;
--needed for ddl ops:
CREATE SCHEMA IF NOT EXISTS "customSchema" AUTHORIZATION alt_usr;
--test creating and using schema as non-superuser
\c single alt_usr
\dt
             List of relations
 Schema |     Name      | Type  |  Owner   
--------+---------------+-------+----------
 public | one_Partition | table | postgres
(1 row)

\set ON_ERROR_STOP 0
SELECT * FROM "one_Partition";
ERROR:  permission denied for relation one_Partition
\set ON_ERROR_STOP 1
CREATE TABLE "1dim"(time timestamp, temp float);
SELECT create_hypertable('"1dim"', 'time');
 create_hypertable 
-------------------
 
(1 row)

INSERT INTO "1dim" VALUES('2017-01-20T09:00:01', 22.5);
INSERT INTO "1dim" VALUES('2017-01-20T09:00:21', 21.2);
INSERT INTO "1dim" VALUES('2017-01-20T09:00:47', 25.1);
SELECT * FROM "1dim";
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:21 2017 | 21.2
 Fri Jan 20 09:00:47 2017 | 25.1
(3 rows)

\ir include/ddl_ops_1.sql
CREATE TABLE PUBLIC."Hypertable_1" (
  time BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  temp_c int NOT NULL DEFAULT -1,
  humidity numeric NULL DEFAULT 0,
  sensor_1 NUMERIC NULL DEFAULT 1,
  sensor_2 NUMERIC NOT NULL DEFAULT 1,
  sensor_3 NUMERIC NOT NULL DEFAULT 1,
  sensor_4 NUMERIC NOT NULL DEFAULT 1
);
CREATE INDEX ON PUBLIC."Hypertable_1" (time, "Device_id");
\set ON_ERROR_STOP 0
CREATE SCHEMA IF NOT EXISTS "customSchema";
psql:include/ddl_ops_1.sql:14: ERROR:  permission denied for database single
\set ON_ERROR_STOP 1
CREATE TABLE "customSchema"."Hypertable_1" (
  time BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  temp_c int NOT NULL DEFAULT -1,
  humidity numeric NULL DEFAULT 0,
  sensor_1 NUMERIC NULL DEFAULT 1,
  sensor_2 NUMERIC NOT NULL DEFAULT 1,
  sensor_3 NUMERIC NOT NULL DEFAULT 1,
  sensor_4 NUMERIC NOT NULL DEFAULT 1
);
CREATE INDEX ON "customSchema"."Hypertable_1" (time, "Device_id");
SELECT * FROM create_hypertable('"public"."Hypertable_1"', 'time', 'Device_id', 1);
 create_hypertable 
-------------------
 
(1 row)

SELECT * FROM create_hypertable('"customSchema"."Hypertable_1"', 'time', NULL, 1);
 create_hypertable 
-------------------
 
(1 row)

SELECT * FROM _timescaledb_catalog.hypertable;
 id | schema_name  |  table_name   | associated_schema_name | associated_table_prefix | num_dimensions 
----+--------------+---------------+------------------------+-------------------------+----------------
  1 | public       | one_Partition | one_Partition          | _hyper_1                |              1
  2 | public       | 1dim          | _timescaledb_internal  | _hyper_2                |              1
  3 | public       | Hypertable_1  | _timescaledb_internal  | _hyper_3                |              2
  4 | customSchema | Hypertable_1  | _timescaledb_internal  | _hyper_4                |              1
(4 rows)

SELECT * FROM _timescaledb_catalog.hypertable_index;
 hypertable_id | main_schema_name |             main_index_name              |                                                              definition                                                               
---------------+------------------+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------
             1 | public           | one_Partition_device_id_timeCustom_idx   | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree (device_id, "timeCustom" DESC NULLS LAST) WHERE (device_id IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_0_idx    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_0) WHERE (series_0 IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_1_idx    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_1) WHERE (series_1 IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_2_idx    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_2) WHERE (series_2 IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_bool_idx | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_bool) WHERE (series_bool IS NOT NULL)
             1 | public           | one_Partition_timeCustom_idx             | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC)
             2 | public           | 1dim_time_idx                            | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time" DESC)
             3 | public           | Hypertable_1_time_Device_id_idx          | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", "Device_id")
             3 | public           | Hypertable_1_time_idx                    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time" DESC)
             3 | public           | Hypertable_1_Device_id_time_idx          | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("Device_id", "time" DESC)
             4 | customSchema     | Hypertable_1_time_Device_id_idx          | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", "Device_id")
             4 | customSchema     | Hypertable_1_time_idx                    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time" DESC)
(12 rows)

CREATE INDEX ON PUBLIC."Hypertable_1" (time, "temp_c");
CREATE INDEX "ind_humidity" ON PUBLIC."Hypertable_1" (time, "humidity");
CREATE INDEX "ind_sensor_1" ON PUBLIC."Hypertable_1" (time, "sensor_1");
INSERT INTO PUBLIC."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
VALUES(1257894000000000000, 'dev1', 30, 70, 1, 2, 3, 100);
CREATE UNIQUE INDEX "Unique1" ON PUBLIC."Hypertable_1" (time, "Device_id");
CREATE UNIQUE INDEX "Unique1" ON "customSchema"."Hypertable_1" (time);
INSERT INTO "customSchema"."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
VALUES(1257894000000000000, 'dev1', 30, 70, 1, 2, 3, 100);
INSERT INTO "customSchema"."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
VALUES(1257894000000000001, 'dev1', 30, 70, 1, 2, 3, 100);
SELECT * FROM _timescaledb_catalog.hypertable_index;
 hypertable_id | main_schema_name |             main_index_name              |                                                              definition                                                               
---------------+------------------+------------------------------------------+---------------------------------------------------------------------------------------------------------------------------------------
             1 | public           | one_Partition_device_id_timeCustom_idx   | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree (device_id, "timeCustom" DESC NULLS LAST) WHERE (device_id IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_0_idx    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_0) WHERE (series_0 IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_1_idx    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_1) WHERE (series_1 IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_2_idx    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_2) WHERE (series_2 IS NOT NULL)
             1 | public           | one_Partition_timeCustom_series_bool_idx | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC NULLS LAST, series_bool) WHERE (series_bool IS NOT NULL)
             1 | public           | one_Partition_timeCustom_idx             | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("timeCustom" DESC)
             2 | public           | 1dim_time_idx                            | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time" DESC)
             3 | public           | Hypertable_1_time_Device_id_idx          | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", "Device_id")
             3 | public           | Hypertable_1_time_idx                    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time" DESC)
             3 | public           | Hypertable_1_Device_id_time_idx          | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("Device_id", "time" DESC)
             4 | customSchema     | Hypertable_1_time_Device_id_idx          | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", "Device_id")
             4 | customSchema     | Hypertable_1_time_idx                    | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time" DESC)
             3 | public           | Hypertable_1_time_temp_c_idx             | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", temp_c)
             3 | public           | ind_humidity                             | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", humidity)
             3 | public           | ind_sensor_1                             | CREATE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", sensor_1)
             3 | public           | Unique1                                  | CREATE UNIQUE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time", "Device_id")
             4 | customSchema     | Unique1                                  | CREATE UNIQUE INDEX /*INDEX_NAME*/ ON /*TABLE_NAME*/ USING btree ("time")
(17 rows)

--expect error cases
\set ON_ERROR_STOP 0
INSERT INTO "customSchema"."Hypertable_1"(time, "Device_id", temp_c, humidity, sensor_1, sensor_2, sensor_3, sensor_4)
VALUES(1257894000000000000, 'dev1', 31, 71, 72, 4, 1, 102);
psql:include/ddl_ops_1.sql:57: ERROR:  duplicate key value violates unique constraint "29-Unique1"
CREATE UNIQUE INDEX "Unique2" ON PUBLIC."Hypertable_1" ("Device_id");
psql:include/ddl_ops_1.sql:58: ERROR:  Cannot create a unique index without the column: time (used in partitioning)
CREATE UNIQUE INDEX "Unique2" ON PUBLIC."Hypertable_1" (time);
psql:include/ddl_ops_1.sql:59: ERROR:  Cannot create a unique index without the column: Device_id (used in partitioning)
CREATE UNIQUE INDEX "Unique2" ON PUBLIC."Hypertable_1" (sensor_1);
psql:include/ddl_ops_1.sql:60: ERROR:  Cannot create a unique index without the column: time (used in partitioning)
UPDATE ONLY PUBLIC."Hypertable_1" SET time = 0 WHERE TRUE;
DELETE FROM ONLY PUBLIC."Hypertable_1" WHERE "Device_id" = 'dev1';
\set ON_ERROR_STOP 1
CREATE TABLE my_ht (time bigint, val integer);
SELECT * FROM create_hypertable('my_ht', 'time');
 create_hypertable 
-------------------
 
(1 row)

ALTER TABLE my_ht ADD COLUMN val2 integer;
\d my_ht
     Table "public.my_ht"
 Column |  Type   | Modifiers 
--------+---------+-----------
 time   | bigint  | 
 val    | integer | 
 val2   | integer | 
Indexes:
    "my_ht_time_idx" btree ("time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON my_ht FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON my_ht FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

-- Should error when adding again
\set ON_ERROR_STOP 0
ALTER TABLE my_ht ADD COLUMN val2 integer;
psql:include/ddl_ops_1.sql:73: ERROR:  column "val2" of relation "my_ht" already exists
\set ON_ERROR_STOP 1
-- Should create 
ALTER TABLE my_ht ADD COLUMN IF NOT EXISTS val3 integer;
\d my_ht
     Table "public.my_ht"
 Column |  Type   | Modifiers 
--------+---------+-----------
 time   | bigint  | 
 val    | integer | 
 val2   | integer | 
 val3   | integer | 
Indexes:
    "my_ht_time_idx" btree ("time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON my_ht FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON my_ht FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

-- Should skip and not error
ALTER TABLE my_ht ADD COLUMN IF NOT EXISTS val3 integer;
psql:include/ddl_ops_1.sql:81: NOTICE:  column "val3" of relation "my_ht" already exists, skipping
\d my_ht
     Table "public.my_ht"
 Column |  Type   | Modifiers 
--------+---------+-----------
 time   | bigint  | 
 val    | integer | 
 val2   | integer | 
 val3   | integer | 
Indexes:
    "my_ht_time_idx" btree ("time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON my_ht FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON my_ht FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

-- Should drop
ALTER TABLE my_ht DROP COLUMN IF EXISTS val3;
\d my_ht
     Table "public.my_ht"
 Column |  Type   | Modifiers 
--------+---------+-----------
 time   | bigint  | 
 val    | integer | 
 val2   | integer | 
Indexes:
    "my_ht_time_idx" btree ("time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON my_ht FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON my_ht FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

-- Should skip and not error
ALTER TABLE my_ht DROP COLUMN IF EXISTS val3;
psql:include/ddl_ops_1.sql:89: NOTICE:  column "val3" of relation "my_ht" does not exist, skipping
\d my_ht
     Table "public.my_ht"
 Column |  Type   | Modifiers 
--------+---------+-----------
 time   | bigint  | 
 val    | integer | 
 val2   | integer | 
Indexes:
    "my_ht_time_idx" btree ("time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON my_ht FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON my_ht FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

--default indexes--
--both created
BEGIN;
CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
  "Time" BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  sensor_1 NUMERIC NULL DEFAULT 1
);
SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1);
 create_hypertable 
-------------------
 
(1 row)

\d+ "Hypertable_1_with_default_index_enabled"
         Table "public.Hypertable_1_with_default_index_enabled"
  Column   |  Type   | Modifiers | Storage  | Stats target | Description 
-----------+---------+-----------+----------+--------------+-------------
 Time      | bigint  | not null  | plain    |              | 
 Device_id | text    | not null  | extended |              | 
 sensor_1  | numeric | default 1 | main     |              | 
Indexes:
    "Hypertable_1_with_default_index_enabled_Device_id_Time_idx" btree ("Device_id", "Time" DESC)
    "Hypertable_1_with_default_index_enabled_Time_idx" btree ("Time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

ROLLBACK;
--only time
BEGIN;
CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
  "Time" BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  sensor_1 NUMERIC NULL DEFAULT 1
);
CREATE INDEX ON PUBLIC."Hypertable_1_with_default_index_enabled" ("Device_id", "Time" DESC);
SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1);
 create_hypertable 
-------------------
 
(1 row)

\d+ "Hypertable_1_with_default_index_enabled"
         Table "public.Hypertable_1_with_default_index_enabled"
  Column   |  Type   | Modifiers | Storage  | Stats target | Description 
-----------+---------+-----------+----------+--------------+-------------
 Time      | bigint  | not null  | plain    |              | 
 Device_id | text    | not null  | extended |              | 
 sensor_1  | numeric | default 1 | main     |              | 
Indexes:
    "Hypertable_1_with_default_index_enabled_Device_id_Time_idx" btree ("Device_id", "Time" DESC)
    "Hypertable_1_with_default_index_enabled_Time_idx" btree ("Time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

ROLLBACK;
--only partition
BEGIN;
CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
  "Time" BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  sensor_1 NUMERIC NULL DEFAULT 1
);
CREATE INDEX ON PUBLIC."Hypertable_1_with_default_index_enabled" ("Time" DESC);
SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1);
 create_hypertable 
-------------------
 
(1 row)

\d+ "Hypertable_1_with_default_index_enabled"
         Table "public.Hypertable_1_with_default_index_enabled"
  Column   |  Type   | Modifiers | Storage  | Stats target | Description 
-----------+---------+-----------+----------+--------------+-------------
 Time      | bigint  | not null  | plain    |              | 
 Device_id | text    | not null  | extended |              | 
 sensor_1  | numeric | default 1 | main     |              | 
Indexes:
    "Hypertable_1_with_default_index_enabled_Device_id_Time_idx" btree ("Device_id", "Time" DESC)
    "Hypertable_1_with_default_index_enabled_Time_idx" btree ("Time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

ROLLBACK;
--null space
BEGIN;
CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
  "Time" BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  sensor_1 NUMERIC NULL DEFAULT 1
);
SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time');
 create_hypertable 
-------------------
 
(1 row)

\d+ "Hypertable_1_with_default_index_enabled"
         Table "public.Hypertable_1_with_default_index_enabled"
  Column   |  Type   | Modifiers | Storage  | Stats target | Description 
-----------+---------+-----------+----------+--------------+-------------
 Time      | bigint  | not null  | plain    |              | 
 Device_id | text    | not null  | extended |              | 
 sensor_1  | numeric | default 1 | main     |              | 
Indexes:
    "Hypertable_1_with_default_index_enabled_Time_idx" btree ("Time" DESC)
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

ROLLBACK;
--disable index creation
BEGIN;
CREATE TABLE PUBLIC."Hypertable_1_with_default_index_enabled" (
  "Time" BIGINT NOT NULL,
  "Device_id" TEXT NOT NULL,
  sensor_1 NUMERIC NULL DEFAULT 1
);
SELECT * FROM create_hypertable('"public"."Hypertable_1_with_default_index_enabled"', 'Time', 'Device_id', 1, create_default_indexes=>FALSE);
 create_hypertable 
-------------------
 
(1 row)

\d+ "Hypertable_1_with_default_index_enabled"
         Table "public.Hypertable_1_with_default_index_enabled"
  Column   |  Type   | Modifiers | Storage  | Stats target | Description 
-----------+---------+-----------+----------+--------------+-------------
 Time      | bigint  | not null  | plain    |              | 
 Device_id | text    | not null  | extended |              | 
 sensor_1  | numeric | default 1 | main     |              | 
Triggers:
    _timescaledb_main_after_insert_trigger AFTER INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH STATEMENT EXECUTE PROCEDURE _timescaledb_internal.main_table_after_insert_trigger()
    _timescaledb_main_insert_trigger BEFORE INSERT ON "Hypertable_1_with_default_index_enabled" FOR EACH ROW EXECUTE PROCEDURE _timescaledb_internal.main_table_insert_trigger()

ROLLBACK;
\ir include/ddl_ops_2.sql
ALTER TABLE PUBLIC."Hypertable_1" ADD COLUMN temp_f INTEGER NOT NULL DEFAULT 31;
ALTER TABLE PUBLIC."Hypertable_1" DROP COLUMN temp_c;
ALTER TABLE PUBLIC."Hypertable_1" DROP COLUMN sensor_4;
ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN humidity SET DEFAULT 100;
ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_1 DROP DEFAULT;
ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_2 SET DEFAULT NULL;
ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_1 SET NOT NULL;
ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_2 DROP NOT NULL;
ALTER TABLE PUBLIC."Hypertable_1" RENAME COLUMN sensor_2 TO sensor_2_renamed;
ALTER TABLE PUBLIC."Hypertable_1" RENAME COLUMN sensor_3 TO sensor_3_renamed;
DROP INDEX "ind_sensor_1";
CREATE OR REPLACE FUNCTION empty_trigger_func()
    RETURNS TRIGGER LANGUAGE PLPGSQL AS
$BODY$
BEGIN
END
$BODY$;
CREATE TRIGGER test_trigger BEFORE UPDATE OR DELETE ON PUBLIC."Hypertable_1"
FOR EACH STATEMENT EXECUTE PROCEDURE empty_trigger_func();
--expect error cases
\set ON_ERROR_STOP 0
ALTER TABLE PUBLIC."Hypertable_1" ALTER COLUMN sensor_2_renamed SET DATA TYPE int;
ALTER INDEX "ind_humidity" RENAME TO "ind_humdity2";
psql:include/ddl_ops_2.sql:27: ERROR:  ALTER INDEX not supported on hypertable public."Hypertable_1"
\set ON_ERROR_STOP 1
--create column with same name as previously renamed one
ALTER TABLE PUBLIC."Hypertable_1" ADD COLUMN sensor_3 BIGINT NOT NULL DEFAULT 131;
--create column with same name as previously dropped one
ALTER TABLE PUBLIC."Hypertable_1" ADD COLUMN sensor_4 BIGINT NOT NULL DEFAULT 131;
 
--test proper denials for all security definer functions:
\c single postgres 
CREATE TABLE plain_table_su (time timestamp, temp float);
CREATE TABLE hypertable_su (time timestamp, temp float);
SELECT create_hypertable('hypertable_su', 'time');
 create_hypertable 
-------------------
 
(1 row)

CREATE INDEX "ind_1" ON hypertable_su (time);
INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
\c single alt_usr
--all of the following should produce errors
\set ON_ERROR_STOP 0
SELECT create_hypertable('plain_table_su', 'time');
ERROR:  Must be owner of relation plain_table_su
CREATE INDEX ON plain_table_su (time, temp);
ERROR:  must be owner of relation plain_table_su
CREATE INDEX ON hypertable_su (time, temp);
ERROR:  must be owner of relation hypertable_su
DROP INDEX "ind_1";
ERROR:  must be owner of relation ind_1
ALTER INDEX "ind_1" RENAME TO "ind_2";
ERROR:  must be owner of relation ind_1
\set ON_ERROR_STOP 1
--test that I can't do anything to a non-owned hypertable.
\set ON_ERROR_STOP 0
CREATE INDEX ON hypertable_su (time, temp);
ERROR:  must be owner of relation hypertable_su
SELECT * FROM hypertable_su;
ERROR:  permission denied for relation hypertable_su
INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
ERROR:  permission denied for relation hypertable_su
ALTER TABLE hypertable_su ADD COLUMN val2 integer;
ERROR:  must be owner of relation hypertable_su
\set ON_ERROR_STOP 1
--grant read permissions
\c single postgres
GRANT SELECT ON hypertable_su TO alt_usr;
\c single alt_usr
SELECT * FROM hypertable_su;
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
(1 row)

\set ON_ERROR_STOP 0
CREATE INDEX ON hypertable_su (time, temp);
ERROR:  must be owner of relation hypertable_su
INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
ERROR:  permission denied for relation hypertable_su
ALTER TABLE hypertable_su ADD COLUMN val2 integer;
ERROR:  must be owner of relation hypertable_su
\set ON_ERROR_STOP 1
--grant read, insert permissions
\c single postgres
GRANT SELECT, INSERT ON hypertable_su TO alt_usr;
\c single alt_usr
INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
SELECT * FROM hypertable_su;
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:01 2017 | 22.5
(2 rows)

\set ON_ERROR_STOP 0
CREATE INDEX ON hypertable_su (time, temp);
ERROR:  must be owner of relation hypertable_su
ALTER TABLE hypertable_su ADD COLUMN val2 integer;
ERROR:  must be owner of relation hypertable_su
\set ON_ERROR_STOP 1
--change owner 
\c single postgres
ALTER TABLE hypertable_su OWNER TO alt_usr;
\c single alt_usr
INSERT INTO hypertable_su VALUES('2017-01-20T09:00:01', 22.5);
SELECT * FROM hypertable_su;
           time           | temp 
--------------------------+------
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:01 2017 | 22.5
 Fri Jan 20 09:00:01 2017 | 22.5
(3 rows)

CREATE INDEX ON hypertable_su (time, temp);
ALTER TABLE hypertable_su ADD COLUMN val2 integer;
